{"version":3,"sources":["shared/components/Input/input.jsx","shared/components/select/select.jsx","shared/components/Form/form.jsx","shared/constants/index.ts","shared/utils/validation.js","shared/utils/useForm.js","shared/utils/formConfig.js","shared/services/api.js","pages/Login/login.jsx","shared/style/index.js","shared/utils/cmp.jsx","core/HocWrapper.js","pages/Add/Add.jsx","pages/Dashboard/Dashboard.jsx","core/GuardedRoute.js","pages/Main/Main.jsx","index.js"],"names":["InputField","props","type","name","handleChange","value","onChange","autoComplete","React","memo","SelectField","options","map","e","createFormField","text","renderInput","className","label","errorMessage","valid","select","Fuel","FormType","password","createValidationRule","ruleName","validateFunc","message","validate","minLengthRule","inputName","minCharacters","inputValue","formObj","length","maxLengthRule","maxCharacters","getValiDatationRule","validation","field","ruleList","rule","push","useForm","inputList","forEach","input","validationRules","touched","useState","form","setForm","isInputFieldValid","useCallback","inputField","onInputChange","event","target","inputObj","isValidInput","renderFormInputs","Object","values","isFormValid","isValid","arr","i","loginForm","required","min","max","EditCar","api","fakeAuth","isAuthenticated","Loader","Login","login","setLogin","authentiCateUser","src","alt","onClick","fetch","method","headers","body","JSON","stringify","sso","then","response","json","authenticate","catch","to","getWidth","span","Row","styled","div","Column","xs","sm","md","lg","Table","table","Td","td","Th","th","Tr","tr","Error","Header","BottomSheet","ErrorCmp","HeaderCmp","HocWrapper","children","title","isOpen","close","Add","company","price","fueltype","mileage","automatic","res","error","Dashboard","handleClickOpen","item","setState","edit","modal","handleClose","changeHandler","id","globalSearch","products","state","isLoading","style","backgroundImage","placeholder","onBlur","this","index","param","Component","GuardedRoute","component","rest","render","Main","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9cac8268.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nfunction InputField(props) {\r\n  const { type, name, handleChange, value } = props;\r\n\r\n  return (\r\n    <input\r\n      type={type}\r\n      name={name}\r\n      value={value}\r\n      onChange={handleChange}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default React.memo(InputField);\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nfunction SelectField(props) {\r\n  const { name, handleChange, value, options } = props;\r\n\r\n  return (\r\n    <select name={name} value={value} onChange={handleChange}>\r\n      {options.map((e) => {\r\n        return (\r\n          <option key={e} value={e}>\r\n            {e}\r\n          </option>\r\n        );\r\n      })}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default React.memo(SelectField);\r\n","import Input from \"../Input/input\";\r\nimport Select from \"../select/select\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst createFormField = {\r\n  text: {\r\n    renderInput: (props) => {\r\n      return (\r\n        <div className=\"inputContainer\" key={props.label}>\r\n          <label>{props.label}</label>\r\n          <Input {...props} />\r\n          {props.errorMessage && !props.valid && (\r\n            <span className=\"error\">{props.errorMessage}</span>\r\n          )}\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n  select: {\r\n    renderInput: (props) => {\r\n      return (\r\n        <div className=\"inputContainer\" key={props.label}>\r\n          <label>{props.label}</label>\r\n          <Select {...props} />\r\n          {props.errorMessage && !props.valid && (\r\n            <span className=\"error\">{props.errorMessage}</span>\r\n          )}\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n};\r\nexport default createFormField;\r\n","export const Fuel = {\r\n  PETROL: \"petrol\",\r\n  DIESEL: \"diesel\",\r\n};\r\n\r\nexport const FuelCopy = {\r\n  [Fuel.PETROL]: \"Petrol\",\r\n  [Fuel.DIESEL]: \"Diesel\",\r\n};\r\n\r\nexport const FormType = {\r\n  password: \"text\",\r\n};\r\n","/**\r\n * creates and returns a validation rule object that\r\n * is used by useForm hook to validate the form inputs\r\n *\r\n * @param {string} ruleName - name of the validation rule\r\n * @param {string} errorMessage - message to display\r\n * @param {function} validateFunc - validation function\r\n */\r\nfunction createValidationRule(ruleName, errorMessage, validateFunc) {\r\n  return {\r\n    name: ruleName,\r\n    message: errorMessage,\r\n    validate: validateFunc,\r\n  };\r\n}\r\n\r\nexport function requiredRule(inputName) {\r\n  return createValidationRule(\r\n    \"required\",\r\n    `${inputName} required`,\r\n    (inputValue, formObj) => inputValue.length !== 0\r\n  );\r\n}\r\n\r\nexport function minLengthRule(inputName, minCharacters) {\r\n  return createValidationRule(\r\n    \"minLength\",\r\n    `${inputName} should contain atleast ${minCharacters} characters`,\r\n    (inputValue, formObj) => inputValue.length >= minCharacters\r\n  );\r\n}\r\n\r\nexport function maxLengthRule(inputName, maxCharacters) {\r\n  return createValidationRule(\r\n    \"minLength\",\r\n    `${inputName} cannot contain more than ${maxCharacters} characters`,\r\n    (inputValue, formObj) => inputValue.length <= maxCharacters\r\n  );\r\n}\r\n\r\nexport function passwordMatchRule() {\r\n  return createValidationRule(\r\n    \"passwordMatch\",\r\n    `passwords do not match`,\r\n    (inputValue, formObj) => inputValue === formObj.password.value\r\n  );\r\n}\r\n\r\nexport function getValiDatationRule(validation, field) {\r\n  const ruleList = [];\r\n\r\n  for (const rule in validation) {\r\n    if (rule === \"required\") {\r\n      ruleList.push(requiredRule(field));\r\n    }\r\n    if (rule === \"min\") {\r\n      ruleList.push(minLengthRule(field, validation[rule]));\r\n    }\r\n    if (rule === \"max\") {\r\n      ruleList.push(maxLengthRule(field, validation[rule]));\r\n    }\r\n  }\r\n\r\n  return ruleList;\r\n}\r\n","import { useState, useCallback } from \"react\";\r\n\r\nimport createFormField from \"../components/Form/form\";\r\n\r\nimport { FormType } from \"../constants\";\r\n\r\nimport { getValiDatationRule } from \"./validation\";\r\n\r\nconst useForm = (inputList) => {\r\n  const formObj = {};\r\n\r\n  inputList.forEach((input) => {\r\n    const type = FormType[input.type] || input.type;\r\n    formObj[input.name] = {\r\n      ...createFormField[type],\r\n      ...{ validationRules: getValiDatationRule(input.validation, input.name) },\r\n      ...input,\r\n      ...{\r\n        errorMessage: \"\",\r\n        touched: false,\r\n        valid: false,\r\n        value: \"\",\r\n      },\r\n    };\r\n  });\r\n\r\n  const [form, setForm] = useState(formObj);\r\n\r\n  function renderFormInputs() {\r\n    return Object.values(form).map((inputObj) => {\r\n      inputObj.handleChange = onInputChange;\r\n      return inputObj.renderInput(inputObj);\r\n    });\r\n  }\r\n\r\n  const isInputFieldValid = useCallback(\r\n    (inputField) => {\r\n      for (const rule of inputField.validationRules) {\r\n        if (!rule.validate(inputField.value, form)) {\r\n          inputField.errorMessage = rule.message;\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    },\r\n    [form]\r\n  );\r\n\r\n  const onInputChange = useCallback(\r\n    (event) => {\r\n      const { name, value } = event.target;\r\n      // copy input object whose value was changed\r\n      const inputObj = { ...form[name] };\r\n      // update value\r\n      inputObj.value = value;\r\n\r\n      // update input field's validity\r\n      const isValidInput = isInputFieldValid(inputObj);\r\n      // if input is valid and it was previously set to invalid\r\n      // set its valid status to true\r\n      if (isValidInput && !inputObj.valid) {\r\n        inputObj.valid = true;\r\n      } else if (!isValidInput && inputObj.valid) {\r\n        // if input is not valid and it was previously valid\r\n        // set its valid status to false\r\n        inputObj.valid = false;\r\n      }\r\n\r\n      // mark input field as touched\r\n      inputObj.touched = true;\r\n      setForm({ ...form, [name]: inputObj });\r\n    },\r\n    [form, isInputFieldValid]\r\n  );\r\n\r\n  /**\r\n   * returns boolean value indicating whether overall form is valid\r\n   *\r\n   * @param {object} formObj - object representation of a form\r\n   */\r\n  const isFormValid = useCallback(() => {\r\n    let isValid = true;\r\n    const arr = Object.values(form);\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (!arr[i].valid) {\r\n        isValid = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return isValid;\r\n  }, [form]);\r\n\r\n  return { renderFormInputs, isFormValid, form };\r\n};\r\n\r\nexport default useForm;\r\n","export const loginForm = [\r\n  {\r\n    label: \"Username\",\r\n    name: \"sso\",\r\n    type: \"text\",\r\n    validation: {\r\n      required: true,\r\n      min: 1,\r\n      max: 4,\r\n    },\r\n  },\r\n  {\r\n    label: \"Password\",\r\n    name: \"password\",\r\n    type: \"password\",\r\n    validation: {\r\n      required: true,\r\n      min: 1,\r\n      max: 4,\r\n    },\r\n  },\r\n];\r\n\r\nexport const EditCar = [\r\n  {\r\n    label: \"Car Name\",\r\n    name: \"name\",\r\n    type: \"text\",\r\n    validation: {},\r\n  },\r\n  {\r\n    label: \"Company\",\r\n    name: \"company\",\r\n    type: \"text\",\r\n    validation: {},\r\n  },\r\n  {\r\n    label: \"Price\",\r\n    name: \"price\",\r\n    type: \"text\",\r\n    validation: {},\r\n  },\r\n  {\r\n    label: \"Fuel Type\",\r\n    name: \"fueltype\",\r\n    type: \"select\",\r\n    options: [\"petrol\", \"diesel\"],\r\n    validation: { required: true },\r\n  },\r\n  {\r\n    label: \"Mileage\",\r\n    name: \"mileage\",\r\n    type: \"text\",\r\n    validation: {},\r\n  },\r\n  {\r\n    label: \"Automatic\",\r\n    name: \"automatic\",\r\n    type: \"text\",\r\n    validation: {},\r\n  },\r\n];\r\n","export const api = \"https://dashboardserver25.herokuapp.com/api/\";\r\n\r\nexport const fakeAuth = {\r\n  isAuthenticated: null,\r\n};\r\n\r\nexport const Loader = () => {\r\n  return <div className=\"loader\"></div>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport useForm from \"../../shared/utils/useForm\";\r\nimport { loginForm } from \"../../shared/utils/formConfig\";\r\n\r\nimport { api, fakeAuth } from \"../../shared/services/api\";\r\n\r\nimport \"./login.scss\";\r\n\r\nexport default function Login() {\r\n  const { renderFormInputs, form } = useForm(loginForm);\r\n  const [login, setLogin] = useState(false);\r\n\r\n  const submit = () => {\r\n    fetch(api + \"authenticate\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        sso: form.sso.value,\r\n        password: form.password.value,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((authenticate) => {\r\n        if (authenticate) {\r\n          authentiCateUser(true);\r\n        } else {\r\n          authentiCateUser(false);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        authentiCateUser(false);\r\n      });\r\n  };\r\n\r\n  const authentiCateUser = (isAuthenticated) => {\r\n    fakeAuth.isAuthenticated = isAuthenticated;\r\n    setLogin(isAuthenticated);\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-wrapper\">\r\n      <div className=\"auth-inner\">\r\n        <div className=\"imgcontainer\">\r\n          <img src=\"/image/img_avatar2.png\" alt=\"Avatar\" className=\"avatar\" />\r\n        </div>\r\n        {renderFormInputs()}\r\n        <button className=\"btn btn-success\" onClick={submit}>\r\n          Submit\r\n        </button>\r\n        {login && <Redirect to=\"/dashboard\" />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nfunction getWidth(span) {\r\n  if (!span) return;\r\n\r\n  return `width:${(span / 12) * 100}%`;\r\n}\r\n\r\nexport const Row = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const Column = styled.div`\r\n  display: block;\r\n  ${(props) => (props.xs ? getWidth(props.xs) : \"width:100%\")};\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    ${(props) => props.sm && getWidth(props.sm)};\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    ${(props) => props.md && getWidth(props.md)};\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    ${(props) => props.lg && getWidth(props.lg)};\r\n  }\r\n`;\r\n\r\nexport const Table = styled.table`\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Td = styled.td`\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n`;\r\n\r\nexport const Th = styled.th`\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  text-align: left;\r\n  background-color: #04aa6d;\r\n  color: white;\r\n`;\r\n\r\nexport const Tr = styled.tr`\r\n  &:hover ${Td} {\r\n    background-color: #f2f2f2;\r\n  }\r\n  &:nth-child(even) {\r\n    background-color: #f2f2f2;\r\n  }\r\n`;\r\n\r\nexport const Error = styled.div`\r\n  position: relative;\r\n  width: 50%;\r\n  margin: auto;\r\n  text-align: center;\r\n  top: 15%;\r\n  background: #f1f4f5;\r\n  padding: 3rem;\r\n  border-radius: 0.25rem;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  width: 100%;\r\n  background-color: #5cb85c;\r\n  height: 5rem;\r\n  color: #fff;\r\n  position: sticky;\r\n`;\r\n\r\nexport const BottomSheet = styled.div`\r\n  position: relative;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  box-shadow: 0 8px 10px -5px rgb(0 0 0 / 20%), 0 16px 24px 2px rgb(0 0 0 / 14%),\r\n    0 6px 30px 5px rgb(0 0 0 / 12%);\r\n  background: #fff;\r\n  margin-top: 5rem;\r\n  overflow: auto;\r\n  transition: all 0.3s;\r\n`;\r\n","import { Error } from \"../style\";\r\n\r\nimport { Row, Column, Header } from \"../style\";\r\n\r\nexport const ErrorCmp = () => {\r\n  return (\r\n    <Error>\r\n      <span className=\"text-danger\">\r\n        Unauthorized user or insufficent access. Please contact admin for\r\n        assistance.\r\n      </span>\r\n    </Error>\r\n  );\r\n};\r\n\r\nexport const HeaderCmp = () => {\r\n  return (\r\n    <Header>\r\n      <Row>\r\n        <Column lg=\"6\"></Column>\r\n        <Column lg=\"5\"></Column>\r\n        <Column lg=\"1\"></Column>\r\n      </Row>\r\n    </Header>\r\n  );\r\n};\r\n","import { BottomSheet } from \"../shared/style\";\r\n\r\nexport function HocWrapper({ children, title, isOpen, close }) {\r\n  return (\r\n    isOpen && (\r\n      <BottomSheet>\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\">{title}</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n            onClick={close}\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"modal-body\">{children}</div>\r\n      </BottomSheet>\r\n    )\r\n  );\r\n}\r\n\r\nexport default HocWrapper;\r\n","import { api } from \"../../shared/services/api\";\r\nimport useForm from \"../../shared/utils/useForm\";\r\nimport { EditCar } from \"../../shared/utils/formConfig\";\r\n\r\nconst Add = () => {\r\n  const { renderFormInputs, form } = useForm(EditCar);\r\n\r\n  const addProduct = () => {\r\n    fetch(api + \"add\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: form.name.value,\r\n        company: form.company.value,\r\n        price: form.price.value,\r\n        fueltype: form.fueltype.value,\r\n        mileage: form.mileage.value,\r\n        automatic: form.automatic.value,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((res) => {})\r\n      .catch((error) => {});\r\n  };\r\n\r\n  return (\r\n    <div className=\"add_product\">\r\n      {renderFormInputs()}\r\n      <button type=\"submit\" onClick={addProduct}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Add;\r\n","import React from \"react\";\r\n\r\nimport { api, Loader } from \"../../shared/services/api\";\r\n\r\nimport { Row, Column, Table, Tr, Td, Th } from \"../../shared/style\";\r\nimport HocWrapper from \"../../core/HocWrapper\";\r\nimport Add from \"../Add/Add\";\r\nimport \"./style.scss\";\r\n\r\nexport default class Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      modal: false,\r\n      products: [],\r\n      edit: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(api + \"products\", {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        this.setState({ products: res });\r\n        this.setState({ isLoading: false });\r\n      });\r\n  }\r\n\r\n  handleClickOpen = (item) => {\r\n    this.setState({ edit: item });\r\n    this.setState({ modal: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ modal: false });\r\n  };\r\n\r\n  changeHandler = (event) => {\r\n    const name = event.target.id;\r\n    const value = event.target.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  globalSearch = (event) => {\r\n    fetch(api + `searchByKey?search=${event.target.value}`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        this.setState({ products: res });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"background\"\r\n          style={{\r\n            backgroundImage: `url('/image/home.webp')`,\r\n          }}\r\n        >\r\n          <div className=\"search_box\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by Product name\"\r\n              className=\"form-control\"\r\n              id=\"search\"\r\n              onBlur={this.globalSearch}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"\">\r\n            <Row>\r\n              <Column lg=\"6\"></Column>\r\n              <Column lg=\"5\"></Column>\r\n              <Column lg=\"1\">\r\n                <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={this.handleClickOpen}\r\n                >\r\n                  Add Product\r\n                </button>\r\n              </Column>\r\n            </Row>\r\n            <Row>\r\n              <Column lg=\"2\"></Column>\r\n              <Column lg=\"8\">\r\n                <Table>\r\n                  <thead>\r\n                    <Tr>\r\n                      <Th className=\"p_name\">Car Name</Th>\r\n                      <Th className=\"p_name\">Company</Th>\r\n                      <Th className=\"p_desc\">Price</Th>\r\n                      <Th>Fuel Type</Th>\r\n                      <Th>Mileage</Th>\r\n                      <Th>Automatic</Th>\r\n                      <Th></Th>\r\n                    </Tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.state.products.map((item, index) => (\r\n                      <Tr key={item.id}>\r\n                        <Td>{item.name}</Td>\r\n                        <Td>{item.company}</Td>\r\n                        <Td className=\"description\">{item.price}</Td>\r\n                        <Td>{item.fueltype}</Td>\r\n                        <Td>{item.mileage}</Td>\r\n                        <Td>{item.automatic ? \"Yes\" : \"No\"}</Td>\r\n                        <Td>\r\n                          <button\r\n                            className=\"btn btn-success\"\r\n                            onClick={() => this.handleClickOpen(item)}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                        </Td>\r\n                      </Tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </Column>\r\n              <Column lg=\"2\"></Column>\r\n            </Row>\r\n\r\n            {this.state.isLoading && <Loader />}\r\n            <div>\r\n              <HocWrapper\r\n                title=\"Add Product\"\r\n                isOpen={this.state.modal}\r\n                close={this.handleClose}\r\n              >\r\n                <Add param={this.state.edit} />\r\n              </HocWrapper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { fakeAuth } from \"../shared/services/api\";\r\n\r\nconst GuardedRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      fakeAuth.isAuthenticated === null ? (\r\n        <Redirect to=\"/Login\" />\r\n      ) : fakeAuth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/Error\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default GuardedRoute;\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Login from \"../Login/login\";\r\nimport { ErrorCmp, HeaderCmp } from \"../../shared/utils/cmp\";\r\n\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\n\r\nimport GuardedRoute from \"../../core/GuardedRoute\";\r\n\r\nexport default function Main() {\r\n  return (\r\n    <div className=\"app\">\r\n      <HeaderCmp />\r\n      <div className=\"main-area\">\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Login} />\r\n            <GuardedRoute path=\"/dashboard\" component={Dashboard} />\r\n            <Route path=\"/error\" component={ErrorCmp} />\r\n            <Route path=\"*\" component={Login} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport Main from \"./pages/Main/Main\";\r\nimport \"./index.scss\";\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}